"0","jags.lm <- function(y, x, "
"0","                    mb = rep(0, ncol(x)), "
"0","                    sb = rep(10, ncol(x)), "
"0","                    lambda = 1, "
"0","                    n.iter = 1e4){"
"0","  linear_model_code <- "
"0","    ""data{"
"0","    D <- dim(x) # get dimensions of X"
"0","    n <- D[1] # number of rows (individuals)"
"0","    p <- D[2] # number of colums (number of variables)"
"0","  }"
"0","  model{"
"0","    # for individuals i=1..n"
"0","    for(i in 1:n){"
"0","      # likelihood"
"0","      y[i] ~ dnorm(mu[i], tau) # JAGS uses precision"
"0","      "
"0","      # posterior predictive"
"0","      ynew[i] ~ dnorm(mu[i], tau) "
"0","    }"
"0","    # conditional mean using matrix algebra"
"0","    mu <- x %*% beta"
"0","    "
"0","    # prior for beta"
"0","    # for covariates j=1,..,p"
"0","    for(j in 1:p){"
"0","      beta[j] ~ dnorm(mb[j], pow(sb[j], -2)) # remember jags uses precision"
"0","    }"
"0","    # prior for tau (sigma)"
"0","    sigma ~ dexp(lambda)"
"0","    tau <- pow(sigma, -2)"
"0","  }"""
"0","  "
"0","  cat(""Compiling Model \n"")"
"0","  # fit model"
"0","  model <- jags.model(file = textConnection(linear_model_code),"
"0","                      data = list(x = x,"
"0","                                  y = y,"
"0","                                  mb = mb,"
"0","                                  sb = sb, "
"0","                                  lambda = lambda))"
"0","  cat(""Sampling Betas\n"")"
"0","  # sample the betas"
"0","  betas <- coda.samples(model = model, "
"0","                        variable.names = ""beta"","
"0","                        n.iter = n.iter)"
"0","  # convert to data.frame"
"0","  betas <- as.data.frame(betas[[1]])"
"0","  "
"0","  cat(""Sampling Posterior Predictive\n"")"
"0","  # sample mu and ynew"
"0","  preds <- jags.samples(model = model, "
"0","                        variable.names = c(""mu"", ""ynew""),"
"0","                        n.iter = n.iter)"
"0","  "
"0","  out <- list(y = y, x =x, betas = betas, preds = preds)"
"0","  return(out)"
"0","}"
